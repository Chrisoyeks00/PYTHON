import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the sales dataset (replace 'sales_data.csv' with your dataset's filename)
data = pd.read_csv('sales_data.csv')

# Data Preprocessing
data_info = data.info()

# Handling Missing Values
data.dropna(inplace=True)

# Data Exploration
summary_stats = data.describe()

# Understanding the Data
total_rows, total_columns = data.shape

# Data Analysis
total_revenue = data['Sales'].sum()
average_sales_per_order = data.groupby('OrderID')['Sales'].sum().mean()
best_selling_product = data.groupby('Product')['Sales'].sum().idxmax()

# Data Visualization
plt.figure(figsize=(12, 6))
total_sales_by_product = data.groupby('Product')['Sales'].sum()
total_sales_by_product.sort_values(ascending=False).plot(kind='bar')
plt.title('Total Sales by Product')
plt.xlabel('Product')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(12, 6))
data['OrderDate'] = pd.to_datetime(data['OrderDate'])
data['Month'] = data['OrderDate'].dt.to_period('M')
total_sales_by_month = data.groupby('Month')['Sales'].sum()
total_sales_by_month.plot(kind='bar')
plt.title('Total Sales by Month')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.show()

# Data Insights
# Average sales per order
print("\nAverage Sales per Order:", round(average_sales_per_order, 2))

# Best-selling product
print("\nBest-Selling Product:", best_selling_product)

# Total Revenue
print("\nTotal Revenue:", round(total_revenue, 2))

# Additional Data Visualizations
plt.figure(figsize=(12, 6))
sns.boxplot(x='Product', y='Sales', data=data)
plt.title('Sales Distribution by Product')
plt.xlabel('Product')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(12, 6))
sns.lineplot(x='Month', y='Sales', data=data)
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.show()

# Correlation Analysis
correlation_matrix = data.corr()

# Advanced Data Analysis and Machine Learning (if applicable)
# Additional analysis and modeling can be added here.

# Save the Insights and Visualizations to Files (if needed)
# You can save the visualizations as images or export data frames to CSV or Excel files.

# Close any open plots (if running in an interactive environment)
plt.close()
